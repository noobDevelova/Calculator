@use "colors" as *;
@use "fonts" as *;
@use "breakpoints" as *;

// Fonts mixins
@mixin font-weight($weight) {
  $weights: (
    thin: 100,
    light: 300,
    regular: 400,
    medium: 500,
    semibold: 600,
    bold: 700,
    black: 900,
  );
  $output: $weight;
  @if map-has-key($weights, $weight) {
    $output: map-get($weights, $weight);
  }
  font-weight: $output;
}

@mixin mq($key) {
  $size: map-get($breakpoints, $key);

  @media only screen and (min-width: $size) {
    @content;
  }
}

:root {
  // Generate color props
  @each $color, $shades in $colors {
    @each $shade, $value in $shades {
      --clr-#{$color}-#{$shade}: #{$value};
    }
  }

  // Generate type-scale fonts props
  @each $screen-size, $font-size in $type-scale {
    @if $screen-size == small {
      @each $size, $value in $font-size {
        --fs-#{$size}: #{$value};
      }
    } @else {
      @include mq(small) {
        @each $size, $value in $font-size {
          --fs-#{$size}: #{$value};
        }
      }
    }
  }
}

@each $color, $shades in $colors {
  @each $shade, $value in $shades {
    .text-#{$color}-#{$shade} {
      color: $value;
    }
  }
}
